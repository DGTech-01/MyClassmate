
@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<div id="tracker-loader"></div>
<script src="~/js/GetTableJson.js"></script>
<div class=" content-area" id="divSummary">
    <div class="page-header">
        <h4 class="page-title"> Report</h4>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Search Criteria</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlSearchCriteria", new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Select", Value = "0"},
                                           new SelectListItem { Text = "State", Value = "State"},
                                            new SelectListItem { Text = "City", Value = "City"},
                                            new SelectListItem { Text = "Branch", Value = "Branch"},
                                          }, new { @class = "form-control", autocomplete = "off", @id = "ddlSearchCriteria", @onchange = "test()" })
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6 col-sm-12" style="display:none" id="divCHA">
                                <div class="form-group">
                                    <label class="form-label" id="lblSearchDisplay">CHA Name</label>
                                    <div class="row gutters-xs">
                                        @*<div class="col">
                                                @Html.DropDownList("ddlCHA",
                                                                          (IEnumerable<SelectListItem>)ViewBag.CHA,
                                                                 "--Select--",
                                                        new { @class = "form-control" })
                                            </div>*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-12" style="display:none" id="divImporter">
                                <div class="form-group">
                                    <label class="form-label" id="lblSearchDisplay">Importer Name</label>
                                    <div class="row gutters-xs">
                                        @*<div class="col">
                                                @Html.DropDownList("ddlImporter",
                                                                          (IEnumerable<SelectListItem>)ViewBag.Importer,
                                                                 "--Select--",
                                                        new { @class = "form-control" })
                                            </div>*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" style="display:none" id="divState">
                                <div class="form-group">
                                    <label class="form-label mandatory">State Name </label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlSName", (IEnumerable<SelectListItem>)ViewBag.State, "--Select--", new { @class = "form-control", @id = "ddlSName", name = "ddlSName", autocomplete = "off" })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" style="display:none" id="divCity">
                                <div class="form-group">
                                    <label class="form-label mandatory">City Name   </label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlCity", (IEnumerable<SelectListItem>)ViewBag.City, "--Select--", new { @class = "form-control", @id = "ddlCity", name = "ddlCity", autocomplete = "off" })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" style="display:none" id="divBranch">
                                <div class="form-group">
                                    <label class="form-label mandatory">Branch Name   </label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlBranch", (IEnumerable<SelectListItem>)ViewBag.Branch, "--Select--", new { @class = "form-control", @id = "ddlBranch", name = "ddlBranch", autocomplete = "off" })
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label"> From Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("FromDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.AddDays(-7).ToString("dd MMM yyyy HH:mm") })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label"> To Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("ToDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.ToString("dd MMM yyyy HH:mm") })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden"> '</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnShow" value="Show" onclick="Show()" class="btn btn-primary" />
                                            @*<input type="button" value="Print" class="btn btn-primary" onclick="PrintRevenueReport();" />*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*@Html.ActionLink("Export To Excel", "ExportToExcelRevenueReport", null, new { @class = "btn btn-primary btn-md" })*@
                    <div class="row">
                        <div class="col-md-12 col-lg-12">
                            <div class="table-responsive">
                                @*<table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblWorkOrderOpenList" style="width:100%;"></table>*@
                                <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblWorkOrderOpenList" style="width:100%;">
                                    <thead style="background-color: #8969eb;text-align: center;font-family: monospace;">
                                        <tr>
                                            <th class="wd-10p sorting" style="color: white">Customername No</th>
                                            <th class="wd-10p sorting" style="color: white">age</th>
                                            <th class="wd-15p sorting" style="color: white">WhatsappNumber</th>
                                            <th class="wd-15p sorting" style="color: white">mothertongue</th>
                                            <th class="wd-15p sorting" style="color: white">TreatementAdvice</th>
                                            <th class="wd-15p sorting" style="color: white">dateofbirth</th>
                                            @*<th class="wd-15p sorting" style="color: white">Gross Wt</th>

                                                <th class="wd-10p sorting" style="color: white">ContactNo</th>*@

                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*<script type="text/javascript">function Show() {
        debugger;
        $("#tracker-loader").fadeIn("slow");

        var FromDate = $("#FromDate").val();
        var ToDate = $("#ToDate").val();
        var ddlSearchCriteria = $("#ddlSearchCriteria").val();
        var ddJoType = $("#ddJoType").val();
        var CustomerId = 0;

        if (ddlSearchCriteria == "Line") {
            CustomerId = $("#ddlLine").val();
        }
        if (ddlSearchCriteria == "CHA") {
            CustomerId = $("#ddlCHA").val();
        }
        if (ddlSearchCriteria == "Importer") {
            CustomerId = $("#ddlImporter").val();
        }

        var data1 = { 'FromDate': FromDate, 'ToDate': ToDate, 'CustomerType': ddlSearchCriteria, 'JoType': ddJoType, 'CustomerId': CustomerId };
        data = JSON.stringify(data1);

        // alert(data);
        $.ajax({

            url: '/Report/getRevenueSummary',
            type: 'Post',
            data: data,
            async: true,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                RepTableDataJson($("#example1"), data, "ContainerRevenueReport", "ContainerRevenueReport");
                $("#tracker-loader").fadeOut("slow");
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
                $("#tracker-loader").fadeOut("slow");
            }


        });
    }
    </script>*@

@*<script>function PrintRevenueReport() {
        $("#tracker-loader").fadeIn("slow");

        try {
            debugger;
            var FromDate = $("#FromDate").val();
            var ToDate = $("#ToDate").val();
            var ddlSearchCriteria = $("#ddlSearchCriteria").val();
            var ddJoType = $("#ddJoType").val();
            var CustomerId = 0;

            if (ddlSearchCriteria == "Line") {
                CustomerId = $("#ddlLine").val();
            }
            if (ddlSearchCriteria == "CHA") {
                CustomerId = $("#ddlCHA").val();
            }
            if (ddlSearchCriteria == "Importer") {
                CustomerId = $("#ddlImporter").val();
            }

            var data1 = { 'FromDate': FromDate, 'ToDate': ToDate, 'CustomerType': ddlSearchCriteria, 'JoType': ddJoType, 'CustomerId': CustomerId };
            data = JSON.stringify(data1);

            $.ajax({
                url: '/Report/InvoiceRevenueReportPrint',
                type: 'Post',
                data: data,
                async: true,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#tracker-loader").fadeOut("slow");
                    //window.print();
                    var myWindow = window.open("", "MsgWindow1", 'width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=no');
                    myWindow.close();
                    var myWindow = window.open("", "MsgWindow1", 'width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=no');
                    myWindow.document.write(response);
                    //myWindow.print();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                    $("#tracker-loader").fadeOut("slow");
                }
            });
        }
        catch (ex) {
            $("#tracker-loader").fadeOut("slow");
        }

    };

    //$(document).on("load",function () {
    //    alert('load');
    //    $("#tracker-loader").fadeOut("slow");
    //});</script>*@

<script src="/Scripts/jquery.dataTables.js"></script>
<script src="/Scripts/dataTables.bootstrap.js"></script>
<script src="js/jquery.js" type="text/javascript"></script>
<script src="js/jquery.dataTables.js" type="text/javascript"></script>
<script>
    $(function () {
        $('#datetimepicker1').datetimepicker();
    });
</script>
<script src="other-library.js"></script>
<script src="jquery.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>


<script>
    var $j = jQuery.noConflict();
    $j(document).ready(function () {
        $j('#tblWorkOrderOpenList').DataTable();
    });

    function Show() {
        debugger
        $("#tracker-loader").fadeIn("fast");
        var fromdate = $("#FromDate").val(); //ddlSearchCriteria
        var todate = $("#ToDate").val();
        var Criteria = $("#ddlSearchCriteria").val();
        var Place = 0;
        var isvalid = true;
        if (Criteria == "State") {
            Place = $("#ddlSName").val();
        }
        if (Criteria == "City") {
            Place = $("#ddlCity").val();
        }
        if (Criteria == "Branch") {
            Place = $("#ddlBranch").val();
        }

        if (Criteria == "0") {
            $("#ddlSearchCriteria").removeClass("is-valid state-valid");
            $("#ddlSearchCriteria").addClass("is-invalid state-invalid");
            isvalid = isvalid && false;
        } else {
            $("#ddlSearchCriteria").removeClass("is-invalid state-invalid");
            $("#ddlSearchCriteria").addClass("is-valid state-valid");
        }
        if (isvalid == false) {
            alert("Error! Please fill required fields!");
            return false;
        }

        var data1 = { 'fromdate': fromdate, 'todate': todate, 'Criteria': Criteria, 'Place': Place };
        var data = JSON.stringify(data1);
        // alert(data);
        try {
            $.ajax({
                url: '/Master/GetReport',
                type: 'Post',
                data: data,
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger

                    //if (data == "0" || data == "[]") {
                    //    alert('No data found.');
                    //    $("#tblWorkOrderOpenList").empty();
                    //    return;
                    //}
                    //$("#tblWorkOrderOpenList").empty();
                    ////alert(data);

                    //var data1 = JSON.stringify(data);

                    ////  alert(data1);
                    //debugger;
                    //RepTableDataJson($("#tblWorkOrderOpenList"), data1, "ExpensesTypeMaster", "ExpensesTypeMaster")
                    ContainerM = data;
                    $('#tblWorkOrderOpenList').dataTable({
                        "destroy": true,
                        "bLengthChange": false,
                        "bPaginate": false,
                        //"bFilter": false,
                        "paging": false,
                        "order": false,
                        "aaData": data,
                        "dom": '<"top"i>rt<"bottom float-left my-3"><"newQuote bottom float-left"><"clear">',
                        "columns": [
                            {
                                "data": "ContainerNo",
                                "render": function (data, type, row, meta) {
                                    data = row.Customername + "<input type=hidden id=Customername value='" + row.Customername + "'>";
                                    return data;
                                }
                            },
                            {
                                "data": "size",
                                "render": function (data, type, row, meta) {
                                    data = row.age + "<input type=hidden id=age value='" + row.age + "'>";
                                    return data;
                                }
                            },
                            {
                                "data": "Type",
                                "render": function (data, type, row, meta) {
                                    data = row.WhatsappNumber + "<input type=hidden id=WhatsappNumber value='" + row.WhatsappNumber + "'>";
                                    return data;
                                }
                            },
                            {
                                "data": "CargoType",
                                "render": function (data, type, row, meta) {
                                    data = row.mothertongue + "<input type=hidden id=mothertongue value='" + row.mothertongue + "'>";
                                    return data;
                                }
                            },
                            {
                                "data": "CargoType",
                                "render": function (data, type, row, meta) {
                                    data = row.TreatementAdvice + "<input type=hidden id=TreatementAdvice value='" + row.TreatementAdvice + "'>";
                                    return data;
                                }
                            },
                            {
                                "data": "CargoType",
                                "render": function (data, type, row, meta) {
                                    data = row.dateofbirth + "<input type=hidden id=dateofbirth value='" + row.dateofbirth + "'>";
                                    return data;
                                }
                            },
                        ],
                        mark: true
                    });
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                    //  $("#tracker-loader").fadeOut("slow");
                }

            });
        }
        catch (ex) {

            alert(ex.message);
        }
    }

    function test() {
        debugger;
        /* $("#ddlSearchCriteria").on('change', function () {*/

        if ($("#ddlSearchCriteria").val() == "State") {
            $("#divState").show();
            $("#divCity").hide();
            $("#divBranch").hide();

        }

        if ($("#ddlSearchCriteria").val() == "City") {

            $("#divCity").show();
            $("#divState").hide();
            $("#divBranch").hide();
        }

        if ($("#ddlSearchCriteria").val() == "Branch") {

            $("#divBranch").show();
            $("#divState").hide();
            $("#divCity").hide();


        }
        /* });*/
    }


    function RepTableDataJson(tableName, data, title, fileName) {
        try {
            if (tableName == null) {
                alert("table not exist.");
            }
            if ($.fn.DataTable.isDataTable(tableName)) {
                tableName.DataTable().destroy();
                tableName.empty();
            }
            var parseJSONResult = jQuery.parseJSON(data);
            if (parseJSONResult != null && parseJSONResult.length > 0) {
                var dynamicColumns = [];
                var i = 0;
                $.each(parseJSONResult[0], function (key, value) {
                    var obj = { sTitle: key };
                    dynamicColumns[i] = obj;
                    i++;
                });
                var rowDataSet = [];
                var i = 0;
                $.each(parseJSONResult, function (key, value) {
                    var rowData = [];
                    var j = 0;
                    $.each(parseJSONResult[i], function (key, value) {
                        rowData[j] = value;
                        j++;
                    });
                    rowDataSet[i] = rowData;

                    i++;
                });
                tableName.dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "pageLength": 25,
                    "aaData": rowDataSet,
                    "bInfo": true,
                    "bPaginate": true,
                    "bFilter": true,
                    "paging": true,
                    "order": [],
                    "columns": dynamicColumns,
                    "deferRender": true,
                    "bSort": true,
                    "dom": 'Bfrtip',
                    "searching": true,
                    "buttons": [
                    ]
                });
            }
        }
        catch (ex) {
            alert(ex.message);
        }
    }
</script>
